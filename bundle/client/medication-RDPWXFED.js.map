{
  "version": 3,
  "sources": ["../../client/medication.tsx"],
  "sourcesContent": ["import React, { FormEvent, useEffect, useState } from 'react';\nimport { Medication, Log } from '../types';\n\nexport default () => {\n    const { id, patient } = Object.fromEntries(new URLSearchParams(location.search));\n\n    const [ medication, setMedication ] = useState<Medication>({\n        id,\n        patient,\n        title: '',\n        time: '',\n        dosage: '',\n        active: false,\n        recurrence: '',\n        description: '',\n    });\n\n    const [ logs, setLogs ] = useState<Array<Log>>([]);\n\n    const [ modalState, setModalState ] = useState<boolean>(false);\n    const modalOpen = () => setModalState(true);\n    const modalClose = () => setModalState(false);\n\n    const remove = () => modalOpen();\n\n    const taken  = async () => {\n        const result = await fetch(`/api/log`, {\n            method: 'PUT',\n            body: JSON.stringify({\n                stamp: Date.now(),\n                medication: medication.id,\n            }),\n        }).then(r => r.json());\n\n        await fetch(`/api/logs?medication=${id}`, { method: 'GET' })\n            .then(r => r.json())\n            .then(setLogs);\n\n    };\n\n    const submit = async (e: FormEvent) => {\n        e.preventDefault();\n\n        const result = await fetch(`/api/medication`, {\n            method: 'PUT',\n            body: JSON.stringify(medication),\n        }).then(r => r.json());\n\n        if (!id) location.search += `&id=${result.id}`;\n    };\n\n    const change = (e: FormEvent<HTMLFormElement>) => {\n        const { type, name, value, checked } = e.target as HTMLInputElement;\n        setMedication({ ...medication, [ name ]: type === 'checkbox' ? checked : value });\n    };\n\n    useEffect(() => {\n\n        if (!id) return;\n\n        fetch(`/api/medication?id=${id}`, { method: 'GET' })\n            .then(r => r.json())\n            .then(setMedication);\n\n        fetch(`/api/logs?medication=${id}`, { method: 'GET' })\n            .then(r => r.json())\n            .then(setLogs);\n\n    }, []);\n\n    const back = () => {\n        if (patient) {\n            location.href = `/patient?id=${patient}`;\n        } else {\n            history.back();\n        }\n    };\n\n    return (<>\n\n        <div className=\"row\">\n            <button onClick={back} className=\"border\">\n                <i>arrow_back</i>\n            </button>\n            <h1 className=\"max padding\">Medication</h1>\n            {id && <button type=\"button\" className=\"border error-border error-text\" onClick={remove}>\n                <i>delete</i>\n                <span>Remove Medication</span>\n            </button>}\n        </div>\n\n        <article className=\"border\">\n            <h5 className=\"padding\">Details</h5>\n            <form className=\"grid\" onSubmit={submit} onChange={change}>\n                <div className=\"field s12 grid right-align\">\n                    <div className=\"s11 right-align\">\n                        <h6>Active</h6>\n                        <div>Medications cannot be removed.</div>\n                    </div>\n                    <label className=\"switch s1 right-align\">\n                        <input name=\"active\" type=\"checkbox\" checked={medication?.active} />\n                        <span></span>\n                    </label>\n                </div>\n                <div className=\"field label border s12 m6\">\n                    <input name=\"title\" value={medication?.title} required/>\n                    <label>Title</label>\n                </div>\n                <div className=\"field label border s12 m6\">\n                    <input name=\"dosage\" value={medication?.dosage} required/>\n                    <label>Dosage</label>\n                </div>\n                <div className=\"field label border s12 m6\">\n                    <input type=\"time\" name=\"time\" value={medication?.time} required/>\n                    <label>Time</label>\n                </div>\n                <div className=\"field border label suffix s12 m6\">\n                    <select name=\"recurrence\" value={medication?.recurrence} required>\n                        <option value=\"\" selected disabled></option>\n                        <option value=\"daily\">Daily</option>\n                        <option value=\"weekly\">Weekly</option>\n                    </select>\n                    <label>Recurrence</label>\n                    <i>arrow_drop_down</i>\n                </div>\n                <div className=\"field textarea label border s12\">\n                    <textarea name=\"description\" value={medication?.description} required></textarea>\n                    <label>Description</label>\n                </div>\n                <div className=\"s12 right-align\">\n                    <button className=\"border\" type=\"submit\">\n                        <i>{id ? 'save' : 'add'}</i>\n                        <span>{id ? 'Save' : 'Add'}</span>\n                    </button>\n                </div>\n            </form>\n        </article>\n\n        {id &&\n            <article className=\"border\">\n                <div className=\"row\">\n                    <h5 className=\"max padding\">Logs</h5>\n                    <button type=\"button\" className=\"border\" onClick={taken}>\n                        <i>add</i>\n                        <span>Mark Taken</span>\n                    </button>\n                </div>\n                <ul className=\"list large-space border\">\n                    {logs.map(log => <>\n                        <li>\n                            <i>schedule</i>\n                            <div className=\"max grid\">\n                                <div className=\"s12\">{new Date(log.stamp).toLocaleString()}</div>\n                            </div>\n                        </li>\n                    </>)}\n                </ul>\n            </article>\n        }\n\n        <dialog className=\"modal\" open={modalState}>\n            <div className=\"grid\">\n                <h5 className=\"s10\">Remove Medication</h5>\n                <button className=\"s2\" onClick={modalClose}>\n                    <i>close</i>\n                </button>\n            </div>\n            <p>Removing medication is not allowed.</p>\n        </dialog>\n\n    </>);\n};"],
  "mappings": "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",
  "names": ["import_react", "medication_default", "id", "patient", "medication", "setMedication", "logs", "setLogs", "modalState", "setModalState", "modalOpen", "modalClose", "remove", "taken", "result", "r", "submit", "e", "change", "type", "name", "value", "checked", "React", "log"]
}
